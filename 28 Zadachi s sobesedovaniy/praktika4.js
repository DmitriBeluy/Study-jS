'use strict';
//Какое будет выведено значение: let x = 5; alert( x++ ); ?
// 1 Чему равно такое выражение: [ ] + false - null + true ?
// 2 Что выведет этот код: let y = 1; let x = y = 2; alert(x); ?
//3  Чему равна сумма [ ] + 1 + 2?
//4  Что выведет этот код: alert( &quot;1&quot;[0] )?
//5  Чему равно 2 &amp;&amp; 1 &amp;&amp; null &amp;&amp; 0 &amp;&amp; undefined ?
//6  Есть ли разница между выражениями? !!( a &amp;&amp; b ) и (a &amp;&amp; b)?
//7  Что выведет этот код: alert( null || 2 &amp;&amp; 3 || 4 ); ?
//8  a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ?
//9  Что выведет этот код: alert( +&quot;Infinity&quot; ); ?
//10  Верно ли сравнение: &quot;Ёжик&quot; &gt; &quot;яблоко&quot;?
//11  Чему равно 0 || &quot;&quot; || 2 || undefined || true || falsе ?

//1 zadacha
//let x = 5; alert ( x++ );           // сообщение выведет 5 тк форма записи постфиксная!!! чтобы вывело 6 нужно сделать префексную запись ++x

//2 zadacha
// [ ] + false - null + true
//console.log([] + false ); //   "false" тк пустой массив - это строка. А по типизации любое сложение любых данных со строкой дает по итогу строку.
//console.log([] + false - null + true); // ответ NaN тк при сложении строки с числовым значение получается Nan

//3 zadacha
//let y = 1;
//let x = y = 2; 
//alert(x);    // ответ 2, тк сначала y присваивается 2 , а потом эта двйока присваивается иксу вместо 1 и  ответ будет 2.

// 4 zadacha
//console.log([] + 1 + 2);   // ответ 12 , тк пустой массив это строка, а если к строке прибавить числа, то они запишутся в строку по порядку и получится 12


// 5 zadacha
//alert( '1'[0] );   // в квадратных скобках идет обращение к элементу строки под определенным номером. В данном случае под нмером 0, то есть 1 по порядку.


// 6 zadacha
//console.log(2 && 1 && null && 0 && undefined);  // правило!!!! оператор && запинается на [{(лжи)}]!!!! поэтому ответ будет NULL!!!!!!

// 7 zadacha
//console.log(!!( 1 && 2 ) === (1 && 2));  // 2 знака !! превращают след за ними значение в булиновое! и булиновое значение не равно второму значению

// 8 zadacha
// правило!!! ИЛИ запинается на правде!!!!

//alert( null || 2 && 3 || 4 );  // сначала мы рассмтриваем оператор И тк он главнее, из 2&&3 возвращаем последнее  значение и это 3! далее сравниваем null || 3 и оператор ИЛИ запинается на 3, тк null  это неправда, далее сравниваем 3 || 4 и опять первое правдивое значение это 3
// ответ 3

// 9 zadacha
//const a = [1, 2, 3];
//const b = [1, 2, 3]; //Правда ли что a == b
//console.log(a == b); // ответ false тк это 2 разных хранилища информации хоть и выглядят одинаково

// 10 zadacha
//alert ( +"Infinity" );  // выведет  Infinity

// 11 zadacha
//console.log("Ёжик" > "яблоко");   // тут сравнение надо делать по таблице юникода. где у каждого символа есть свое место.

// 12 zadacha 
console.log( 0 || "" || 2 || undefined || true || falsе); 

